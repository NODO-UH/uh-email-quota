// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/NODO-UH/uh-email-quota/models"
)

// UserQuotaOKCode is the HTTP code returned for type UserQuotaOK
const UserQuotaOKCode int = 200

/*UserQuotaOK Ok

swagger:response userQuotaOK
*/
type UserQuotaOK struct {

	/*
	  In: Body
	*/
	Payload *models.Quota `json:"body,omitempty"`
}

// NewUserQuotaOK creates UserQuotaOK with default headers values
func NewUserQuotaOK() *UserQuotaOK {

	return &UserQuotaOK{}
}

// WithPayload adds the payload to the user quota o k response
func (o *UserQuotaOK) WithPayload(payload *models.Quota) *UserQuotaOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the user quota o k response
func (o *UserQuotaOK) SetPayload(payload *models.Quota) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UserQuotaOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*UserQuotaDefault error

swagger:response userQuotaDefault
*/
type UserQuotaDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUserQuotaDefault creates UserQuotaDefault with default headers values
func NewUserQuotaDefault(code int) *UserQuotaDefault {
	if code <= 0 {
		code = 500
	}

	return &UserQuotaDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the user quota default response
func (o *UserQuotaDefault) WithStatusCode(code int) *UserQuotaDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the user quota default response
func (o *UserQuotaDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the user quota default response
func (o *UserQuotaDefault) WithPayload(payload *models.Error) *UserQuotaDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the user quota default response
func (o *UserQuotaDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UserQuotaDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
